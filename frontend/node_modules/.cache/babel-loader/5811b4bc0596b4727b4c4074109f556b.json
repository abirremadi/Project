{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\";\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Pc/Desktop/abir/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","listProducts","dispatch","type","data","get","payload","error","message","updateProduct","product","getState","PRODUCT_UPDATE_REQUEST","userSignin","userInfo","put","_id","headers","Authorization","token","PRODUCT_UPDATE_SUCCESS","response","PRODUCT_UPDATE_FAIL","detailsProduct","productId","createProduct","post"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport { PRODUCT_CREATE_FAIL, \r\n        PRODUCT_CREATE_REQUEST,\r\n        PRODUCT_CREATE_SUCCESS, \r\n        PRODUCT_DETAILS_FAIL,\r\n        PRODUCT_DETAILS_REQUEST,\r\n        PRODUCT_DETAILS_SUCCESS, \r\n        PRODUCT_LIST_FAIL,\r\n        PRODUCT_LIST_REQUEST,\r\n        PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\"\r\n\r\nexport const listProducts = () => async(dispatch)=>{\r\n    dispatch({\r\n        type:PRODUCT_LIST_REQUEST\r\n    });\r\n    try{\r\n        const {data}= await Axios.get ('/api/products');\r\n   dispatch({type:PRODUCT_LIST_SUCCESS,payload:data});\r\n    } catch(error){\r\n        dispatch({type:PRODUCT_LIST_FAIL, payload:error.message});\r\n    }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.put(`/api/products/${product._id}`, product, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const detailsProduct = (productId) => async(dispatch)=>{\r\n    dispatch({type:PRODUCT_DETAILS_REQUEST,payload:productId});\r\n    try{\r\n        const {data}=  await Axios.get (`/api/products/${productId}`);\r\n        dispatch({type:PRODUCT_DETAILS_SUCCESS,payload:data});\r\n    } catch(error){\r\n        dispatch({type:PRODUCT_DETAILS_FAIL,\r\n        payload:\r\n         error.response && error.response.data.message\r\n        ?error.response.data.message\r\n        :error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.post(\r\n        '/api/products',\r\n        {},\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload: data.product,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}