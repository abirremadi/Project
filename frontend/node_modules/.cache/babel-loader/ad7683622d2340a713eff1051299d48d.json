{"ast":null,"code":"import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(data);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Pc/Desktop/abir/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","listOrders","get","console","log","detailsOrder","orderId"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport { CART_EMPTY } from '../constants/cartConstants';\r\nimport {ORDER_CREATE_REQUEST,\r\n        ORDER_CREATE_SUCCESS,\r\n        ORDER_CREATE_FAIL,\r\n        ORDER_DETAILS_REQUEST,\r\n        ORDER_DETAILS_SUCCESS, \r\n        ORDER_DETAILS_FAIL, \r\n        ORDER_LIST_REQUEST, \r\n        ORDER_LIST_SUCCESS, \r\n        ORDER_LIST_FAIL} from '../constants/orderConstants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\r\n    try {    \r\n      const {\r\n        userSignin: { userInfo },\r\n      } = getState();\r\n      const { data } = await Axios.post('/api/orders', order, {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      });\r\n      dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\r\n      dispatch({ type: CART_EMPTY });\r\n      localStorage.removeItem('cartItems');\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n    \r\n\r\n  export const listOrders = () => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_LIST_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.get('/api/orders', {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      });\r\n      console.log(data);\r\n      dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ORDER_LIST_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n  export const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.get(`/api/orders/${orderId}`, {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      });\r\n      dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}