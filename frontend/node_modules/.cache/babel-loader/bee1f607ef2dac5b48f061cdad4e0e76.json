{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Pc/Desktop/abir/frontend/src/reducers/cartReeducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,4BAAhD;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAE;AAACC,EAAAA,SAAS,EAAC;AAAX,CAAR,EAAuBC,MAAvB,KAAgC;AACvD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,aAAL;AACI,YAAMO,IAAI,GAACF,MAAM,CAACG,OAAlB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA9C,CAAlB;;AACA,UAAGH,SAAH,EAAa;AACT,eAAO,EACH,GAAGN,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAD,IAC/BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAiCL,IAAjC,GAAwCI,CAD7B;AAFR,SAAP;AAMH,OAPD,MAOO;AACH,eAAO,EAAC,GAAGR,KAAJ;AAAUC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAoBG,IAApB;AAApB,SAAP;AACH;;AACD,SAAMN,gBAAN;AACA;AACA,aAAOE,KAAP;AAhBR;AAkBH,CAnBM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (state ={cartItems:[]},action)=>{\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item=action.payload;\r\n            const existItem = state.cartItems.find( x => x.product === item.product);\r\n            if(existItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => \r\n                    x.product === existItem.product? item : x\r\n                ), \r\n                };\r\n            } else {\r\n                return {...state,cartItems:[...state.cartItems,item]};\r\n            }\r\n            case  CART_REMOVE_ITEM :\r\n            default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}