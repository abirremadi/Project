{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pc\\\\Desktop\\\\abir\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileScreen() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user) {\n      dispatch(detailsUser(userInfo._id));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n    }\n\n    dispatch(detailsUser(userInfo._id));\n  }, [dispatch, userInfo._id, user]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch update profile\n\n    if (password !== confirmPassword) {\n      alert('Password and Confirm Password Are Not Matched');\n    } else {\n      dispatch(updateUserProfile({\n        userId: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: [\" \", error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \" Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter name...\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \" Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"text\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \" password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Enter password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"  Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"confirmPassword\",\n            type: \"password\",\n            placeholder: \"Enter confirm password\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileScreen, \"53mTVj+E3zLd9dnOQr8oLiu/Nos=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/Pc/Desktop/abir/frontend/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","userSignin","state","userInfo","userDetails","loading","error","user","dispatch","_id","submitHandler","e","preventDefault","alert","userId","target","value"],"mappings":"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","sourcesContent":["import React ,{ useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\r\nimport LoadingBox from'../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nexport default function ProfileScreen() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const {userInfo}=userSignin;\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const {loading,error,user} = userDetails;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (!user) {\r\n            dispatch(detailsUser(userInfo._id));\r\n          }else {\r\n            setName(user.name);\r\n            setEmail(user.email);}\r\n        dispatch(detailsUser(userInfo._id));\r\n      }, [dispatch, userInfo._id,user]);\r\n\r\n      const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // dispatch update profile\r\n        if (password !== confirmPassword) {\r\n            alert('Password and Confirm Password Are Not Matched');\r\n          } else {\r\n            dispatch(\r\n              updateUserProfile({\r\n                userId: user._id,\r\n                name,\r\n                email,\r\n                password,\r\n              })\r\n            );\r\n          }\r\n      };\r\n    return (\r\n        <div>\r\n           <form className=\"form\" onSubmit={submitHandler}>\r\n               <div>\r\n                   <h1> User Profile</h1>\r\n               </div>\r\n               {loading ? <LoadingBox></LoadingBox>\r\n                 : \r\n                 error?<MessageBox variant=\"danger\"> {error} </MessageBox>\r\n                 :\r\n                 <>\r\n                 <div>\r\n                    <label htmlFor=\"name\"> Name</label>\r\n                    <input\r\n                    id=\"name\" \r\n                    type=\"text\"\r\n                    placeholder=\"Enter name...\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    ></input>\r\n                 </div>\r\n                 <div>\r\n                    <label htmlFor=\"email\"> Email</label>\r\n                    <input\r\n                    id=\"email\" \r\n                    type=\"text\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    ></input>\r\n                 </div>\r\n                 <div>\r\n                    <label htmlFor=\"password\"> password</label>\r\n                    <input\r\n                    id=\"password\" \r\n                    type=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n               \r\n                    ></input>\r\n                 </div>\r\n                 <div>\r\n                    <label htmlFor=\"confirmPassword\">  Confirm Password</label>\r\n                    <input\r\n                    id=\"confirmPassword\" \r\n                    type=\"password\"\r\n                    placeholder=\"Enter confirm password\"\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  \r\n                    ></input>\r\n                 </div>\r\n                 <div> \r\n                     <label/>\r\n                     <button className=\"primary\" type=\"submit\">\r\n                         Update\r\n                     </button>\r\n                 </div>\r\n\r\n                 </>\r\n                }\r\n           </form>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}