{"ast":null,"code":"import _slicedToArray from\"C:/Users/Pc/Desktop/abir/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{detailsUser,updateUserProfile}from'../actions/userActions';import LoadingBox from'../components/LoadingBox';import MessageBox from'../components/MessageBox';import{USER_UPDATE_PROFILE_RESET}from'../constants/userConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function ProfileScreen(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var userSignin=useSelector(function(state){return state.userSignin;});var userInfo=userSignin.userInfo;var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userUpdateProfile=useSelector(function(state){return state.userUpdateProfile;});var successUpdate=userUpdateProfile.success,errorUpdate=userUpdateProfile.error,loadingUpdate=userUpdateProfile.loading;var dispatch=useDispatch();useEffect(function(){if(!user){dispatch({type:USER_UPDATE_PROFILE_RESET});dispatch(detailsUser(userInfo._id));}else{setName(user.name);setEmail(user.email);}},[dispatch,userInfo._id,user]);var submitHandler=function submitHandler(e){e.preventDefault();// dispatch update profile\nif(password!==confirmPassword){alert('Password and Confirm Password Are Not Matched');}else{dispatch(updateUserProfile({userId:user._id,name:name,email:email,password:password}));}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\" User Profile\"})}),loading?/*#__PURE__*/_jsx(LoadingBox,{}):error?/*#__PURE__*/_jsxs(MessageBox,{variant:\"danger\",children:[\" \",error,\" \"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[loadingUpdate&&/*#__PURE__*/_jsx(LoadingBox,{}),errorUpdate&&/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:errorUpdate}),successUpdate&&/*#__PURE__*/_jsx(MessageBox,{variant:\"success\",children:\"Profile Updated Successfully\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\" Name\"}),/*#__PURE__*/_jsx(\"input\",{id:\"name\",type:\"text\",placeholder:\"Enter name...\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\" Email\"}),/*#__PURE__*/_jsx(\"input\",{id:\"email\",type:\"text\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\" password\"}),/*#__PURE__*/_jsx(\"input\",{id:\"password\",type:\"password\",placeholder:\"Enter password\",onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:\"  Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{id:\"confirmPassword\",type:\"password\",placeholder:\"Enter confirm password\",onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"primary\",type:\"submit\",children:\"Update\"})]})]})]})});}","map":{"version":3,"sources":["C:/Users/Pc/Desktop/abir/frontend/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","userSignin","state","userInfo","userDetails","loading","error","user","userUpdateProfile","successUpdate","success","errorUpdate","loadingUpdate","dispatch","type","_id","submitHandler","e","preventDefault","alert","userId","target","value"],"mappings":"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","sourcesContent":["import React ,{ useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\r\nimport LoadingBox from'../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\nexport default function ProfileScreen() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const {userInfo}=userSignin;\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const {loading,error,user} = userDetails;\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n    const {\r\n      success: successUpdate,\r\n      error: errorUpdate,\r\n      loading: loadingUpdate,\r\n    } = userUpdateProfile;\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n      \r\n        if (!user) {\r\n          dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n          dispatch(detailsUser(userInfo._id));\r\n        } else {\r\n          setName(user.name);\r\n          setEmail(user.email);\r\n        }\r\n      }, [dispatch, userInfo._id, user]);\r\n      const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // dispatch update profile\r\n        if (password !== confirmPassword) {\r\n          alert('Password and Confirm Password Are Not Matched');\r\n        } else {\r\n          dispatch(updateUserProfile({ userId: user._id, name, email, password }));\r\n        }\r\n      };\r\n\r\n      \r\n    return (\r\n        <div>\r\n           <form className=\"form\" onSubmit={submitHandler}>\r\n               <div>\r\n                   <h1> User Profile</h1>\r\n               </div>\r\n               {loading ? <LoadingBox></LoadingBox>\r\n                 : \r\n                 error?<MessageBox variant=\"danger\"> {error} </MessageBox>\r\n                 :\r\n                 <>\r\n                  {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                  {errorUpdate && (\r\n                  <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\r\n                   )}\r\n                   {successUpdate && (\r\n                   <MessageBox variant=\"success\">\r\n                    Profile Updated Successfully\r\n                    </MessageBox>\r\n                    )}\r\n                 <div>\r\n                    <label htmlFor=\"name\"> Name</label>\r\n                    <input\r\n                    id=\"name\" \r\n                    type=\"text\"\r\n                    placeholder=\"Enter name...\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    ></input>\r\n                 </div>\r\n                 <div>\r\n                    <label htmlFor=\"email\"> Email</label>\r\n                    <input\r\n                    id=\"email\" \r\n                    type=\"text\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    ></input>\r\n                 </div>\r\n                 <div>\r\n                    <label htmlFor=\"password\"> password</label>\r\n                    <input\r\n                    id=\"password\" \r\n                    type=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n               \r\n                    ></input>\r\n                 </div>\r\n                 <div>\r\n                    <label htmlFor=\"confirmPassword\">  Confirm Password</label>\r\n                    <input\r\n                    id=\"confirmPassword\" \r\n                    type=\"password\"\r\n                    placeholder=\"Enter confirm password\"\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  \r\n                    ></input>\r\n                 </div>\r\n                 <div> \r\n                     <label/>\r\n                     <button className=\"primary\" type=\"submit\">\r\n                         Update\r\n                     </button>\r\n                 </div>\r\n\r\n                 </>\r\n                }\r\n           </form>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}