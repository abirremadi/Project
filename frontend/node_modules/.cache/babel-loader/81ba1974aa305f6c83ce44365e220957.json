{"ast":null,"code":"import { USER_REGISTER_REQUEST, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstants\";\nimport Axios from 'axios';\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/Pc/Desktop/abir/frontend/src/actions/userActions.js"],"names":["USER_REGISTER_REQUEST","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","Axios","register","name","email","password","dispatch","type","payload","data","post","USER_REGISTER_SUCCESS","localStorage","setItem","JSON","stringify","error","USER_REGISTER_FAIL","response","message","signin","signout","removeItem"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,gBAAhC,EAAkDC,mBAAlD,EAAuEC,mBAAvE,EAA4FC,YAA5F,QAAgH,4BAAhH;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AACrEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEX,qBAAR;AAA+BY,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAxC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,IAAN,CAAW,qBAAX,EAAkC;AACvDP,MAAAA,IADuD;AAEvDC,MAAAA,KAFuD;AAGvDC,MAAAA;AAHuD,KAAlC,CAAvB;AAKAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEI,qBAAR;AAA+BH,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,mBAAR;AAA6BS,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACD,GATD,CASE,OAAOO,KAAP,EAAc;AACdV,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEU,kBADC;AAEPT,MAAAA,OAAO,EACLQ,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBU,OAAtC,GACIH,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBU,OADxB,GAEIH,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CApBM;AAsBP,OAAO,MAAMC,MAAM,GAAG,CAAChB,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC3DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET,mBAAR;AAA8BU,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAvC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,IAAN,CAAW,mBAAX,EAAgC;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAhC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,mBAAR;AAA6BS,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACD,GAJD,CAIE,OAAOO,KAAP,EAAc;AACdV,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,gBADC;AAEPW,MAAAA,OAAO,EACLQ,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBU,OAAtC,GACIH,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBU,OADxB,GAEIH,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CAfI;AAiBL,OAAO,MAAME,OAAO,GAAG,MAAOf,QAAD,IAAc;AACzCM,EAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACAV,EAAAA,YAAY,CAACU,UAAb,CAAwB,WAAxB;AAEAhB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AAED,CANM","sourcesContent":["import { USER_REGISTER_REQUEST, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstants\";\r\nimport Axios from 'axios';\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\r\n  try {\r\n    const { data } = await Axios.post('/api/users/register', {\r\n      name,\r\n      email,\r\n      password,\r\n    });\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signin = (email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGNIN_REQUEST , payload: { email, password } });\r\n    try {\r\n      const { data } = await Axios.post('/api/users/signin', { email, password });\r\n      dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_SIGNIN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const signout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n \r\n    dispatch({ type: USER_SIGNOUT });\r\n  \r\n  };"]},"metadata":{},"sourceType":"module"}